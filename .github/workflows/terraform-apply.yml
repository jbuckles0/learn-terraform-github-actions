name: "Terraform Apply"

on:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "jacobbuckles-org"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "learn-terraform-github-actions"
  CONFIG_DIRECTORY: "./"

jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      workspace-outputs: ${{ steps.tf-output.outputs.outputs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

      - name: Output
        uses: hashicorp/tfc-workflows-github/actions/workspace-output@v1.0.0
        id: tf-output
        with:
          workspace: ${{ env.TF_WORKSPACE }}

  ansible:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Configure Inventory
        env:
          TF_OUTPUT: ${{ needs.terraform.outputs.workspace-outputs}}
        run: echo "$TF_OUTPUT"
        # run: |
        #   echo "[servers]" > inventory
        #   echo "${{ steps.terraform. }}" >> inventory

      # - name: Run Ansible Playbook
      #   run: ansible-playbook -i inventory playbook.yml
      #   env:
      #     ANSIBLE_HOST_KEY_CHECKING: 'false'
